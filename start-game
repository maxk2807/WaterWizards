#!/bin/bash

# WaterWizards Universal Game Launcher
# Works on macOS, Linux, and Windows (with Git Bash/WSL)

echo "🚀 WaterWizards - Game Launcher"
echo "================================"

# Detect OS for better messaging
if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" ]]; then
    OS="Windows"
elif [[ "$OSTYPE" == "darwin"* ]]; then
    OS="macOS"
else
    OS="Linux"
fi

echo "🌍 Detected OS: $OS"
echo ""

# Build the solution first to avoid simultaneous builds
echo "📦 Building solution..."
dotnet build WaterWizards.sln

if [ $? -ne 0 ]; then
    echo "❌ Build failed! Please fix the errors and try again."
    read -p "Press Enter to exit..."
    exit 1
fi

echo "✅ Build successful!"

# Function to cleanup background processes on exit
cleanup() {
    echo ""
    echo "🛑 Shutting down WaterWizards..."
    
    # Kill all dotnet processes related to our projects
    pkill -f "WaterWizard.Server" 2>/dev/null
    pkill -f "WaterWizard.Client" 2>/dev/null
    
    echo "✅ All processes stopped."
    exit 0
}

# Set up signal handlers for cleanup
trap cleanup SIGINT SIGTERM

echo ""
echo "🎮 Starting WaterWizards components..."
echo ""

# Start the server in background
echo "🖥️  Starting server..."
dotnet run --project src/WaterWizard.Server/WaterWizard.Server.csproj > server.log 2>&1 &
SERVER_PID=$!

# Wait a moment for server to start
sleep 2

# Check if server started successfully
if ! kill -0 $SERVER_PID 2>/dev/null; then
    echo "❌ Server failed to start. Check server.log for details."
    exit 1
fi

# Start first client
echo "👤 Starting client 1..."
dotnet run --project src/WaterWizard.Client/WaterWizard.Client.csproj > client1.log 2>&1 &
CLIENT1_PID=$!

# Wait a moment for first client to start
sleep 1

# Start second client
echo "👤 Starting client 2..."
dotnet run --project src/WaterWizard.Client/WaterWizard.Client.csproj > client2.log 2>&1 &
CLIENT2_PID=$!

echo ""
echo "✅ All components started successfully!"
echo "📋 Process IDs:"
echo "   Server: $SERVER_PID (logs: server.log)"
echo "   Client 1: $CLIENT1_PID (logs: client1.log)"
echo "   Client 2: $CLIENT2_PID (logs: client2.log)"
echo ""
echo "🎯 Game is ready! Press Ctrl+C to stop all components."
echo "📝 Logs are saved to server.log, client1.log, and client2.log"
echo ""

# Wait for user to press Ctrl+C
wait 